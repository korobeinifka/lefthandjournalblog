---
import type { CollectionEntry } from "astro:content";

interface Props { post: CollectionEntry<"blogs">; }
const { post }: Props = Astro.props;
const { data } = post;

const href = `/blog/${post.slug}/`;

const d = new Date(data.pubDate);
const day = d.toLocaleString('pt-BR', { day: '2-digit' });
const month = d.toLocaleString('pt-BR', { month: 'short' }).replace(/\.$/, '').toUpperCase();
const year = d.getFullYear();
const dateLabel = `${day} ${month}, ${year}`;

const hero: any = (data as any).heroImage;
const heroSrc: string | undefined =
  typeof hero === "string" ? (hero?.trim() ? hero : undefined) : (hero?.src ?? undefined);

const showThumbnail = Boolean(heroSrc);
const thumbnailAlt = data.heroImageAlt ?? data.title;

const layoutClass = showThumbnail
  ? "grid grid-cols-[minmax(0,1fr)_6.25rem] md:grid-cols-[minmax(0,1fr)_6rem] items-center gap-4 p-3 md:p-4"
  : "grid items-center gap-3 p-3 md:p-4";
---

<a
  href={href}
  class="group block w-full rounded bg-card-bg ui-transition hover:bg-surface-bg focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-text"
>
  <div class={layoutClass}>
    <div class="min-w-0">
      <!-- usa tokens → no light fica mais escuro pelos novos valores -->
      <div class="flex flex-wrap items-center gap-2 text-[10px] md:text-[11px] font-semibold uppercase tracking-[0.28em] text-secondary-text">
        {data.category && <span>{data.category}</span>}
        {dateLabel && (<><span aria-hidden="true">/</span><span>{dateLabel}</span></>)}
      </div>

      <h3 class="mt-0.5 text-base md:text-lg font-semibold leading-snug text-primary-text ui-transition group-hover:text-primary-text">
        {data.title}
      </h3>

      {data.description && (
        <p class="mt-1 text-[13px] leading-snug text-secondary-text clamp-2">
          {data.description}
        </p>
      )}
    </div>

    {showThumbnail && heroSrc && (
      <div class="shrink-0 ml-2">
        <img
          src={heroSrc}
          alt={thumbnailAlt}
          loading="lazy"
          decoding="async"
          class="h-20 w-20 md:h-20 md:w-24 object-cover rounded"
        />
      </div>
    )}
  </div>
</a>
