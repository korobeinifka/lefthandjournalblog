---
export interface Props {
  links: { label: string; slug: string }[];
}
const { links = [] } = Astro.props as Props;
const linkBase =
  "nav-link ui-transition ui-focus inline-flex items-center px-0 pb-[3px] pt-0 leading-none font-[inherit] tracking-[inherit]";
---

<nav class="hidden md:block">
  <ul class="flex items-center gap-8 text-sm font-semibold uppercase tracking-[0.2em] leading-none">
    <li><a href="/" class={linkBase}>INÍCIO</a></li>

    <li class="relative" data-nav-dropdown>
      <a href="/categories" role="button" data-nav-trigger aria-haspopup="true" aria-expanded="false" class={linkBase}>TÓPICOS</a>

      <div
        data-nav-panel
        class="invisible pointer-events-none absolute left-1/2 top-full z-30 mt-3 w-64 -translate-x-1/2 translate-y-1
               rounded border border-border-ink/80 bg-card-bg p-2 opacity-0 shadow-xl
               transition-[opacity,transform] duration-[var(--nav-speed)] ease-[var(--nav-ease)]
               before:absolute before:-top-3 before:left-0 before:right-0 before:h-3 before:content-['']
               data-[open='true']:visible data-[open='true']:pointer-events-auto data-[open='true']:opacity-100 data-[open='true']:translate-y-0">
        <ul class="flex flex-col">
          {links.map((c) => (
            <li>
              <a href={`/categories/${c.slug}`} class="block rounded px-3 py-2 text-xs uppercase tracking-[0.28em] text-secondary-text hover:text-primary-text ui-transition">
                {c.label}
              </a>
            </li>
          ))}
          <li class="my-1 h-px bg-border-ink/60"></li>
          <li>
            <a href="/categories" class="block rounded px-3 py-2 text-xs uppercase tracking-[0.28em] text-secondary-text hover:text-primary-text ui-transition">
              OUTROS
            </a>
          </li>
        </ul>
      </div>
    </li>

    <li><a href="/about" class={linkBase}>SOBRE</a></li>
  </ul>
</nav>

<script is:inline>
  (() => {
    if (typeof window === 'undefined') return;
    const ROOT='[data-nav-dropdown]',TRIGGER='[data-nav-trigger]',PANEL='[data-nav-panel]';
    const OPEN_DELAY=70,CLOSE_DELAY=120; const cleanups=new Map();
    const setup=(root)=>{const t=root.querySelector(TRIGGER),p=root.querySelector(PANEL); if(!(t&&p)) return ()=>{};
      let open=false,ti=0,to=0; const set=(v)=>{ if(open===v) return; open=v; p.dataset.open=v?'true':'false'; t.setAttribute('aria-expanded',v?'true':'false'); };
      const clr=()=>{clearTimeout(ti);clearTimeout(to);ti=to=0}; const o=()=>{clr();ti=setTimeout(()=>set(true),OPEN_DELAY)};
      const c=()=>{clr();to=setTimeout(()=>set(false),CLOSE_DELAY)}; const k=(e)=>{if(e.key==='Escape'&&open){e.preventDefault();set(false);t.focus();}}
      t.addEventListener('pointerenter',o); t.addEventListener('pointerleave',c); t.addEventListener('click',(e)=>{e.preventDefault();set(!open)});
      t.addEventListener('focus',o); t.addEventListener('blur',c); p.addEventListener('pointerenter',o); p.addEventListener('pointerleave',c);
      root.addEventListener('keydown',k); set(false);
      return ()=>{clr(); t.removeEventListener('pointerenter',o); t.removeEventListener('pointerleave',c); t.removeEventListener('click',(e)=>{});
        t.removeEventListener('focus',o); t.removeEventListener('blur',c); p.removeEventListener('pointerenter',o); p.removeEventListener('pointerleave',c);
        root.removeEventListener('keydown',k);}
    };
    const init=()=>{cleanups.forEach(fn=>fn());cleanups.clear();document.querySelectorAll(ROOT).forEach(r=>cleanups.set(r,setup(r)))};
    init(); document.addEventListener('astro:after-swap',init);
    document.addEventListener('astro:unload',()=>{cleanups.forEach(fn=>fn());cleanups.clear();document.removeEventListener('astro:after-swap',init);});
  })();
</script>
