---
import PageLayout from "@/layouts/PageLayout.astro";
import { getCollection } from "astro:content";
import { CATEGORY_LINKS } from "@/utils/categories";

const posts = await getCollection("blogs");

// ðŸ”‘ normaliza chaves (remove acentos, espaÃ§os e sÃ­mbolos)
const toKey = (s: string) =>
  s
    .toLowerCase()
    .normalize("NFD")
    .replace(/[\u0300-\u036f]/g, "") // remove diacrÃ­ticos
    .replace(/[^a-z0-9]+/g, "");     // tira separadores

// âœ… uma Ãºnica imagem fixa por categoria (use chaves jÃ¡ normalizadas)
const CATEGORY_THUMBS: Record<string, { src: string; alt?: string }> = {
  tecnologia:  { src: "/images/categories/tecnologia.jpg",  alt: "Tecnologia" },
  geopolitica: { src: "/images/categories/geopolitica.jpg", alt: "GeopolÃ­tica" },
  xadrez:      { src: "/images/categories/xadrez.jpg",      alt: "Xadrez" },
};

// sÃ³ para contar posts por categoria (opcional)
const counts = new Map<string, number>();
for (const p of posts) {
  const label = (p.data.category ?? "").toString();
  if (!label) continue;
  counts.set(label, (counts.get(label) ?? 0) + 1);
}

const categories = CATEGORY_LINKS.map(({ label, slug }) => {
  const count = counts.get(label) ?? 0;
  // ðŸ”’ consulta robusta: tenta slug e, se falhar, usa o label
  const fixed = CATEGORY_THUMBS[toKey(slug)] ?? CATEGORY_THUMBS[toKey(label)];
  const heroImage = fixed?.src;
  const heroAlt = fixed?.alt ?? label;
  return { label, slug, count, heroImage, heroAlt };
});
---

<PageLayout title="Categories">
  <section class="flex flex-col space-y-3 md:space-y-4">
    <!-- rÃ³tulo alinhado Ã  mesma rÃ©gua dos cards -->
    <div class="mx-auto w-full md:max-w-[46rem] lg:max-w-[50rem] xl:max-w-[52rem]">
      <p class="text-[12px] font-semibold uppercase tracking-[0.16em] text-muted-text">
        CATEGORIES
      </p>
    </div>

    <!-- Lista com o mesmo layout dos cards de posts -->
    <ul class="space-y-3 md:space-y-4">
      {categories.map((cat) => {
        const showThumb = !!cat.heroImage;
        const layoutClass = showThumb
          ? "grid grid-cols-[minmax(0,1fr)_6.5rem] md:grid-cols-[minmax(0,1fr)_9rem] items-center gap-4 p-3 md:p-4"
          : "grid items-center gap-3 p-3 md:p-4";

        return (
          <li class="py-0 first:pt-0">
            <a
              href={`/categories/${cat.slug}`}
              class="group block mx-auto md:max-w-[46rem] lg:max-w-[50rem] xl:max-w-[52rem] rounded border border-border-ink/70 bg-card-bg ui-transition hover:border-border-ink/90 hover:bg-surface-bg focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-text"
            >
              <div class={layoutClass}>
                <div class="min-w-0">
                  <div class="flex flex-wrap items-center gap-2 text-[10px] md:text-[11px] font-semibold uppercase tracking-[0.28em] text-muted-text">
                    <span>{cat.count} {cat.count === 1 ? "ARTIGO" : "ARTIGOS"}</span>
                  </div>
                  <h3 class="mt-0.5 text-base md:text-lg font-semibold leading-snug text-primary-text ui-transition group-hover:text-primary-text">
                    {cat.label}
                  </h3>
                </div>

                {showThumb && (
                  <div class="shrink-0 ml-2">
                    <img
                      src={cat.heroImage!}
                      alt={cat.heroAlt}
                      loading="lazy"
                      decoding="async"
                      class="h-20 w-20 md:h-24 md:w-36 object-cover rounded"
                    />
                  </div>
                )}
              </div>
            </a>
          </li>
        );
      })}
    </ul>
  </section>
</PageLayout>
