---
import PageLayout from "@/layouts/PageLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import PostListItem from "@/components/PostListItem.astro";

const toSlug = (s: string) =>
  (s || "")
    .toLowerCase()
    .normalize("NFD").replace(/[\u0300-\u036f]/g, "")
    .replace(/[^a-z0-9]+/g, "-")
    .replace(/^-+|-+$/g, "");

export async function getStaticPaths() {
  const cats = await getCollection("categories");
  const posts = await getCollection("blogs");

  return cats.map((c) => {
    const slug = c.data.slug;
    const label = c.data.label;

    const items = posts
      .filter((p) => toSlug(p.data.category ?? "") === slug)
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    return { params: { category: slug }, props: { label, items } };
  });
}

type P = { label?: string; items?: CollectionEntry<"blogs">[] };
const { label, items } = Astro.props as P;
---

<PageLayout>
  <section class="flex flex-col space-y-3 md:space-y-4">
    <div class="mx-auto w-full md:max-w-[46rem] lg:max-w-[50rem] xl:max-w-[52rem]">
      <p class="text-[12px] font-semibold uppercase tracking-[0.16em] text-muted-text">
        {(label?.toUpperCase() ?? "")}
      </p>
    </div>

    {items && items.length ? (
      <ul class="space-y-3 md:space-y-4">
        {items.map((post) => (
          <li class="py-0 first:pt-0">
            <PostListItem post={post} />
          </li>
        ))}
      </ul>
    ) : (
      <div class="mx-auto w-full md:max-w-[46rem] lg:max-w-[50rem] xl:max-w-[52rem]">
        <p class="text-secondary-text">No posts in this category yet.</p>
      </div>
    )}
  </section>
</PageLayout>
