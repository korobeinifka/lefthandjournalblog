---
import PageLayout from "@/layouts/PageLayout.astro";
import EditorialCard from "@/components/Blog/EditorialCard.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { CATEGORY_OPTIONS } from "@/utils/categories";

export async function getStaticPaths() {
  const posts = await getCollection("blogs");
  return CATEGORY_OPTIONS.map((label) => {
    const matchingPosts = posts
      .filter((post) => post.data.category === label)
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    return {
      params: { category: label.toLowerCase() },
      props: {
        label,
        posts: matchingPosts,
      },
    };
  });
}

interface Props {
  label: (typeof CATEGORY_OPTIONS)[number];
  posts: CollectionEntry<"blogs">[];
}

const { label, posts }: Props = Astro.props;
---

<PageLayout title={label}>
  <section class="flex flex-col gap-12">
    <div class="flex flex-col gap-4">
      <p class="text-sm uppercase tracking-[0.3em] text-muted-text">Category</p>
      <h1 class="font-display text-4xl leading-tight text-primary-text sm:text-5xl">{label}</h1>
      <p class="max-w-2xl text-lg text-secondary-text">
        Curated essays exploring {label.toLowerCase()} through the Lefthand Journal lensâ€”deliberate pacing, generous whitespace, and analysis built for thoughtful readers.
      </p>
    </div>
    {posts.length > 0 ? (
      <div class="grid gap-8 md:grid-cols-2 xl:grid-cols-3">
        {posts.map((post) => (
          <EditorialCard post={post} />
        ))}
      </div>
    ) : (
      <p class="text-secondary-text">Articles for this category are in progress. Check back soon.</p>
    )}
  </section>
</PageLayout>
