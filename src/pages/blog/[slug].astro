---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogLayout from "@/layouts/BlogLayout.astro";
import Prose from "@/components/Utils/Prose.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blogs");
  return posts.map((post) => ({
    params: { slug: post.slug }, // ← use SEMPRE o slug do arquivo
    props: { post },
  }));
}

// ✅ Compatível com SSG (build) e SSR (dev):
let post =
  (Astro.props as { post?: CollectionEntry<"blogs"> } | undefined)?.post;

if (!post) {
  const slug = Astro.params.slug as string;
  const all = await getCollection("blogs");
  post = all.find((p) => p.slug === slug);
  if (!post) {
    throw new Error(`Post not found for slug "${slug}".`);
  }
}

const { Content } = await post.render();
---

<BlogLayout {...post}>
  <Prose>
    <Content />
  </Prose>
</BlogLayout>
