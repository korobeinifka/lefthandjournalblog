name: Deploy to Hostinger

on:
  push:
    branches: [ main ]

# Evita fila: se chegar um novo push no mesmo branch, cancela a execução anterior.
concurrency:
  group: hostinger-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      TINA_CLIENT_ID: ${{ secrets.TINA_CLIENT_ID }}
      TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
      # Garanta que este branch é o mesmo configurado no Tina Cloud (Indexing Branch)
      TINA_BRANCH: main
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Debug Tina env
        run: |
          echo "GITHUB_REF_NAME=${GITHUB_REF_NAME}"
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "TINA_BRANCH=${TINA_BRANCH}"
          node -e "console.log('tina/config.ts resolver sees ->', { TINA_BRANCH: process.env.TINA_BRANCH, VERCEL_GIT_COMMIT_REF: process.env.VERCEL_GIT_COMMIT_REF, HEAD: process.env.HEAD })"

      - name: Install deps
        run: npm ci

      # Favicons antes do build (como você já tinha)
      - name: Generate favicons
        run: npm run prebuild

      # Retry curto do Tina (absorve delay de reindex no Cloud)
      - name: Build CMS (Tina) with retry
        run: |
          set -e
          for i in 1 2 3; do
            if npx tinacms@1.11.0 build; then
              echo "Tina build succeeded"
              exit 0
            fi
            echo "Tina not indexed yet (attempt $i/3). Retrying in 20s..."
            sleep 20
          done
          echo "Tina build failed after retries"
          exit 1

      - name: Astro check
        run: npx astro check

      - name: Astro build
        run: npx astro build

      - name: Patch admin head (safe)
        run: node scripts/patch-admin-head.mjs

      # Sanity check: garante que o admin foi para a saída estática
      - name: Check admin is in output
        run: |
          ls -la .vercel/output/static/admin || (echo "Admin não encontrado. Verifique 'public/admin' e o script de patch." && exit 1)

      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          password: ${{ secrets.HOSTINGER_PASS }}
          local-dir: .vercel/output/static/
          server-dir: ./
          dangerous-clean-slate: false
          exclude: |
            **/.well-known/**
            **/mail/**
